<launch>

  <!-- This file makes it easy to include different planning pipelines;
       It is assumed that all planning pipelines are named XXX_planning_pipeline.launch  -->

  <arg name="pipeline" default="ompl" />

  <!-- define capabilites that are loaded on start (space seperated) -->
  <arg name="capabilities" default=""/>

  <!-- inhibit capabilites (space seperated) -->
  <arg name="disable_capabilities" default=""/>

  <include file="$(find ovis_moveit_config)/launch/$(arg pipeline)_planning_pipeline.launch.xml">
    <arg name="capabilities" value="$(arg capabilities)"/>
    <arg name="disable_capabilities" value="$(arg disable_capabilities)"/>
  </include>

</launch>

<!-- COMPARE TOP/BOT  BOT WAS NOT ON THECONSTRUCT-->
<!--
<launch>-->
  <!-- By default we do not overwrite the URDF. Change the following to true to change the default behavior 
  <arg name="load_robot_description" default="false"/>-->

  <!-- The name of the parameter under which the URDF is loaded 
  <arg name="robot_description" default="robot_description"/>-->

  <!-- Load universal robot description format (URDF) 
  <param if="$(arg load_robot_description)" name="$(arg robot_description)" command="xacro  '$(find ovis_description)/urdf/generated_gazebo.urdf'"/>
-->
  <!-- The semantic description that corresponds to the URDF 
  <param name="$(arg robot_description)_semantic" textfile="$(find ovis_moveit_config)/config/ovis.srdf" />
-->
  <!-- Load updated joint limits (override information from URDF) 
  <group ns="$(arg robot_description)_planning">
    <rosparam command="load" file="$(find ovis_moveit_config)/config/joint_limits.yaml"/>
    <rosparam command="load" file="$(find ovis_moveit_config)/config/cartesian_limits.yaml"/>
  </group>
  -->

  <!-- Load default settings for kinematics; these settings are overridden by settings in a node's namespace
  <group ns="$(arg robot_description)_kinematics">
    <rosparam command="load" file="$(find ovis_moveit_config)/config/kinematics.yaml"/>

  </group>

</launch>
 -->
