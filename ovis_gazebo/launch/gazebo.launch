<launch>

  <arg name="sim" default="true"/>

  <param name="robot_description" command="$(find xacro)/xacro.py $(find ovis_description)/urdf/test_urdf.urdf"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <group if="$(arg sim)"> 
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model ovis"/>
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="debug" value="false"/>
      <arg name="gui" value="false"/>
      <arg name="paused" value="false"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="headless" value="false"/>
    <!-- more default parameters can be changed here -->
    </include>
  </group>

  <remap unless="$(arg sim)" from="/follow_joint_trajectory" to="/ovis/joint_trajectory_controller/follow_joint_trajectory"/>
  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find ovis_bringup)/config/ovis_control.yaml" command="load"/>
  
  <!-- load the controllers -->
  <node name="controller_spawner" pkg="controller_manager" type="spawner" ns="ovis" args="joint_trajectory_controller joint_state_controller"/>

  <!-- <include file="$(find sia10f_gazebo_moveit_config)/launch/moveit_planning_execution.launch.xml">
    <arg name="sim" value="$(arg sim)"/>
  </include> -->

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
    <remap from="/joint_states" to="/ovis/joint_states"/>
  </node>

  <!--<include file="$(find sia10f_gazebo_moveit_config)/launch/moveit_rviz.launch"/>-->
</launch>
